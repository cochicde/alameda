// source: datahub/plannings/services.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var datahub_common_metrics_pb = require('../../datahub/common/metrics_pb.js');
goog.object.extend(proto, datahub_common_metrics_pb);
var datahub_common_queries_pb = require('../../datahub/common/queries_pb.js');
goog.object.extend(proto, datahub_common_queries_pb);
var datahub_plannings_plannings_pb = require('../../datahub/plannings/plannings_pb.js');
goog.object.extend(proto, datahub_plannings_plannings_pb);
var datahub_plannings_types_pb = require('../../datahub/plannings/types_pb.js');
goog.object.extend(proto, datahub_plannings_types_pb);
var datahub_resources_metadata_pb = require('../../datahub/resources/metadata_pb.js');
goog.object.extend(proto, datahub_resources_metadata_pb);
var datahub_schemas_types_pb = require('../../datahub/schemas/types_pb.js');
goog.object.extend(proto, datahub_schemas_types_pb);
var google_rpc_status_pb = require('../../google/rpc/status_pb.js');
goog.object.extend(proto, google_rpc_status_pb);
goog.exportSymbol('proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.CreatePlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListNodePlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListNodePlanningsResponse', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListPlanningsResponse', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListPodPlanningsRequest', null, global);
goog.exportSymbol('proto.prophetstor.datahub.plannings.ListPodPlanningsResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListPodPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.ListPodPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListPodPlanningsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.displayName = 'proto.prophetstor.datahub.plannings.ListPodPlanningsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.displayName = 'proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.displayName = 'proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.displayName = 'proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListNodePlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.ListNodePlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListNodePlanningsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.displayName = 'proto.prophetstor.datahub.plannings.ListNodePlanningsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.displayName = 'proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.plannings.CreatePlanningsRequest.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.CreatePlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.CreatePlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.CreatePlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListPlanningsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListPlanningsRequest.displayName = 'proto.prophetstor.datahub.plannings.ListPlanningsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.datahub.plannings.ListPlanningsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.plannings.ListPlanningsResponse.displayName = 'proto.prophetstor.datahub.plannings.ListPlanningsResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    podPlanningsList: jspb.Message.toObjectList(msg.getPodPlanningsList(),
    datahub_plannings_plannings_pb.PodPlanning.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest;
  return proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_plannings_plannings_pb.PodPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.PodPlanning.deserializeBinaryFromReader);
      msg.addPodPlannings(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPodPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      datahub_plannings_plannings_pb.PodPlanning.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated PodPlanning pod_plannings = 1;
 * @return {!Array<!proto.prophetstor.datahub.plannings.PodPlanning>}
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.getPodPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.PodPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.PodPlanning, 1));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.PodPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.setPodPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PodPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.PodPlanning}
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.addPodPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.datahub.plannings.PodPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.clearPodPlanningsList = function() {
  return this.setPodPlanningsList([]);
};


/**
 * optional int64 granularity = 2;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreatePodPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    controllerPlanningsList: jspb.Message.toObjectList(msg.getControllerPlanningsList(),
    datahub_plannings_plannings_pb.ControllerPlanning.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest;
  return proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_plannings_plannings_pb.ControllerPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.ControllerPlanning.deserializeBinaryFromReader);
      msg.addControllerPlannings(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getControllerPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      datahub_plannings_plannings_pb.ControllerPlanning.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated ControllerPlanning controller_plannings = 1;
 * @return {!Array<!proto.prophetstor.datahub.plannings.ControllerPlanning>}
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.getControllerPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.ControllerPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.ControllerPlanning, 1));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.ControllerPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.setControllerPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.ControllerPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.ControllerPlanning}
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.addControllerPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.datahub.plannings.ControllerPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.clearControllerPlanningsList = function() {
  return this.setControllerPlanningsList([]);
};


/**
 * optional int64 granularity = 2;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateControllerPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationPlanningsList: jspb.Message.toObjectList(msg.getApplicationPlanningsList(),
    datahub_plannings_plannings_pb.ApplicationPlanning.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest;
  return proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_plannings_plannings_pb.ApplicationPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.ApplicationPlanning.deserializeBinaryFromReader);
      msg.addApplicationPlannings(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      datahub_plannings_plannings_pb.ApplicationPlanning.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated ApplicationPlanning application_plannings = 1;
 * @return {!Array<!proto.prophetstor.datahub.plannings.ApplicationPlanning>}
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.getApplicationPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.ApplicationPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.ApplicationPlanning, 1));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.ApplicationPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.setApplicationPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.ApplicationPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.ApplicationPlanning}
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.addApplicationPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.datahub.plannings.ApplicationPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.clearApplicationPlanningsList = function() {
  return this.setApplicationPlanningsList([]);
};


/**
 * optional int64 granularity = 2;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateApplicationPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespacePlanningsList: jspb.Message.toObjectList(msg.getNamespacePlanningsList(),
    datahub_plannings_plannings_pb.NamespacePlanning.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest;
  return proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_plannings_plannings_pb.NamespacePlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.NamespacePlanning.deserializeBinaryFromReader);
      msg.addNamespacePlannings(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespacePlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      datahub_plannings_plannings_pb.NamespacePlanning.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated NamespacePlanning namespace_plannings = 1;
 * @return {!Array<!proto.prophetstor.datahub.plannings.NamespacePlanning>}
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.getNamespacePlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.NamespacePlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.NamespacePlanning, 1));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.NamespacePlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.setNamespacePlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.NamespacePlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.NamespacePlanning}
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.addNamespacePlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.datahub.plannings.NamespacePlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.clearNamespacePlanningsList = function() {
  return this.setNamespacePlanningsList([]);
};


/**
 * optional int64 granularity = 2;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateNamespacePlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodePlanningsList: jspb.Message.toObjectList(msg.getNodePlanningsList(),
    datahub_plannings_plannings_pb.NodePlanning.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest;
  return proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_plannings_plannings_pb.NodePlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.NodePlanning.deserializeBinaryFromReader);
      msg.addNodePlannings(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodePlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      datahub_plannings_plannings_pb.NodePlanning.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated NodePlanning node_plannings = 1;
 * @return {!Array<!proto.prophetstor.datahub.plannings.NodePlanning>}
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.getNodePlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.NodePlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.NodePlanning, 1));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.NodePlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.setNodePlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.NodePlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.NodePlanning}
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.addNodePlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.datahub.plannings.NodePlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.clearNodePlanningsList = function() {
  return this.setNodePlanningsList([]);
};


/**
 * optional int64 granularity = 2;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateNodePlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clusterPlanningsList: jspb.Message.toObjectList(msg.getClusterPlanningsList(),
    datahub_plannings_plannings_pb.ClusterPlanning.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest;
  return proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_plannings_plannings_pb.ClusterPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.ClusterPlanning.deserializeBinaryFromReader);
      msg.addClusterPlannings(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClusterPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      datahub_plannings_plannings_pb.ClusterPlanning.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated ClusterPlanning cluster_plannings = 1;
 * @return {!Array<!proto.prophetstor.datahub.plannings.ClusterPlanning>}
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.getClusterPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.ClusterPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.ClusterPlanning, 1));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.ClusterPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.setClusterPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.ClusterPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.ClusterPlanning}
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.addClusterPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.prophetstor.datahub.plannings.ClusterPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.clearClusterPlanningsList = function() {
  return this.setClusterPlanningsList([]);
};


/**
 * optional int64 granularity = 2;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreateClusterPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    objectMetaList: jspb.Message.toObjectList(msg.getObjectMetaList(),
    datahub_resources_metadata_pb.ObjectMeta.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    planningType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListPodPlanningsRequest;
  return proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.addObjectMeta(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getObjectMetaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.resources.ObjectMeta object_meta = 2;
 * @return {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.getObjectMetaList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} value
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.setObjectMetaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.resources.ObjectMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.addObjectMeta = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.resources.ObjectMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.clearObjectMetaList = function() {
  return this.setObjectMetaList([]);
};


/**
 * optional int64 granularity = 3;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional PlanningType planning_type = 4;
 * @return {!proto.prophetstor.datahub.plannings.PlanningType}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsRequest.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    podPlanningsList: jspb.Message.toObjectList(msg.getPodPlanningsList(),
    datahub_plannings_plannings_pb.PodPlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListPodPlanningsResponse;
  return proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new datahub_plannings_plannings_pb.PodPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.PodPlanning.deserializeBinaryFromReader);
      msg.addPodPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getPodPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_plannings_plannings_pb.PodPlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PodPlanning pod_plannings = 2;
 * @return {!Array<!proto.prophetstor.datahub.plannings.PodPlanning>}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.getPodPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.PodPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.PodPlanning, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.PodPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.setPodPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PodPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.PodPlanning}
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.addPodPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.plannings.PodPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListPodPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListPodPlanningsResponse.prototype.clearPodPlanningsList = function() {
  return this.setPodPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    objectMetaList: jspb.Message.toObjectList(msg.getObjectMetaList(),
    datahub_resources_metadata_pb.ObjectMeta.toObject, includeInstance),
    kind: jspb.Message.getFieldWithDefault(msg, 3, 0),
    granularity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    planningType: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest;
  return proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.addObjectMeta(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.datahub.resources.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    case 5:
      var value = /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getObjectMetaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.resources.ObjectMeta object_meta = 2;
 * @return {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.getObjectMetaList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} value
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.setObjectMetaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.resources.ObjectMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.addObjectMeta = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.resources.ObjectMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.clearObjectMetaList = function() {
  return this.setObjectMetaList([]);
};


/**
 * optional prophetstor.datahub.resources.Kind kind = 3;
 * @return {!proto.prophetstor.datahub.resources.Kind}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.getKind = function() {
  return /** @type {!proto.prophetstor.datahub.resources.Kind} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.datahub.resources.Kind} value
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int64 granularity = 4;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional PlanningType planning_type = 5;
 * @return {!proto.prophetstor.datahub.plannings.PlanningType}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsRequest.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    controllerPlanningsList: jspb.Message.toObjectList(msg.getControllerPlanningsList(),
    datahub_plannings_plannings_pb.ControllerPlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse;
  return proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new datahub_plannings_plannings_pb.ControllerPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.ControllerPlanning.deserializeBinaryFromReader);
      msg.addControllerPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getControllerPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_plannings_plannings_pb.ControllerPlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ControllerPlanning controller_plannings = 2;
 * @return {!Array<!proto.prophetstor.datahub.plannings.ControllerPlanning>}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.getControllerPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.ControllerPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.ControllerPlanning, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.ControllerPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.setControllerPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.ControllerPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.ControllerPlanning}
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.addControllerPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.plannings.ControllerPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListControllerPlanningsResponse.prototype.clearControllerPlanningsList = function() {
  return this.setControllerPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    objectMetaList: jspb.Message.toObjectList(msg.getObjectMetaList(),
    datahub_resources_metadata_pb.ObjectMeta.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    planningType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest;
  return proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.addObjectMeta(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getObjectMetaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.resources.ObjectMeta object_meta = 2;
 * @return {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.getObjectMetaList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} value
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.setObjectMetaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.resources.ObjectMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.addObjectMeta = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.resources.ObjectMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.clearObjectMetaList = function() {
  return this.setObjectMetaList([]);
};


/**
 * optional int64 granularity = 3;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional PlanningType planning_type = 4;
 * @return {!proto.prophetstor.datahub.plannings.PlanningType}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsRequest.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    applicationPlanningsList: jspb.Message.toObjectList(msg.getApplicationPlanningsList(),
    datahub_plannings_plannings_pb.ApplicationPlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse;
  return proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new datahub_plannings_plannings_pb.ApplicationPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.ApplicationPlanning.deserializeBinaryFromReader);
      msg.addApplicationPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getApplicationPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_plannings_plannings_pb.ApplicationPlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ApplicationPlanning application_plannings = 2;
 * @return {!Array<!proto.prophetstor.datahub.plannings.ApplicationPlanning>}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.getApplicationPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.ApplicationPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.ApplicationPlanning, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.ApplicationPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.setApplicationPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.ApplicationPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.ApplicationPlanning}
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.addApplicationPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.plannings.ApplicationPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListApplicationPlanningsResponse.prototype.clearApplicationPlanningsList = function() {
  return this.setApplicationPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    objectMetaList: jspb.Message.toObjectList(msg.getObjectMetaList(),
    datahub_resources_metadata_pb.ObjectMeta.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    planningType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest;
  return proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.addObjectMeta(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getObjectMetaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.resources.ObjectMeta object_meta = 2;
 * @return {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.getObjectMetaList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} value
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.setObjectMetaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.resources.ObjectMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.addObjectMeta = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.resources.ObjectMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.clearObjectMetaList = function() {
  return this.setObjectMetaList([]);
};


/**
 * optional int64 granularity = 3;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional PlanningType planning_type = 4;
 * @return {!proto.prophetstor.datahub.plannings.PlanningType}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsRequest.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    namespacePlanningsList: jspb.Message.toObjectList(msg.getNamespacePlanningsList(),
    datahub_plannings_plannings_pb.NamespacePlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse;
  return proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new datahub_plannings_plannings_pb.NamespacePlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.NamespacePlanning.deserializeBinaryFromReader);
      msg.addNamespacePlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getNamespacePlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_plannings_plannings_pb.NamespacePlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated NamespacePlanning namespace_plannings = 2;
 * @return {!Array<!proto.prophetstor.datahub.plannings.NamespacePlanning>}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.getNamespacePlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.NamespacePlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.NamespacePlanning, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.NamespacePlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.setNamespacePlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.NamespacePlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.NamespacePlanning}
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.addNamespacePlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.plannings.NamespacePlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListNamespacePlanningsResponse.prototype.clearNamespacePlanningsList = function() {
  return this.setNamespacePlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    objectMetaList: jspb.Message.toObjectList(msg.getObjectMetaList(),
    datahub_resources_metadata_pb.ObjectMeta.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    planningType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListNodePlanningsRequest;
  return proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.addObjectMeta(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getObjectMetaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.resources.ObjectMeta object_meta = 2;
 * @return {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.getObjectMetaList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} value
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.setObjectMetaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.resources.ObjectMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.addObjectMeta = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.resources.ObjectMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.clearObjectMetaList = function() {
  return this.setObjectMetaList([]);
};


/**
 * optional int64 granularity = 3;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional PlanningType planning_type = 4;
 * @return {!proto.prophetstor.datahub.plannings.PlanningType}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsRequest.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    nodePlanningsList: jspb.Message.toObjectList(msg.getNodePlanningsList(),
    datahub_plannings_plannings_pb.NodePlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListNodePlanningsResponse;
  return proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new datahub_plannings_plannings_pb.NodePlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.NodePlanning.deserializeBinaryFromReader);
      msg.addNodePlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getNodePlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_plannings_plannings_pb.NodePlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated NodePlanning node_plannings = 2;
 * @return {!Array<!proto.prophetstor.datahub.plannings.NodePlanning>}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.getNodePlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.NodePlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.NodePlanning, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.NodePlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.setNodePlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.NodePlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.NodePlanning}
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.addNodePlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.plannings.NodePlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListNodePlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListNodePlanningsResponse.prototype.clearNodePlanningsList = function() {
  return this.setNodePlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    objectMetaList: jspb.Message.toObjectList(msg.getObjectMetaList(),
    datahub_resources_metadata_pb.ObjectMeta.toObject, includeInstance),
    granularity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    planningType: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest;
  return proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.addObjectMeta(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGranularity(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (reader.readEnum());
      msg.setPlanningType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getObjectMetaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getGranularity();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getPlanningType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.resources.ObjectMeta object_meta = 2;
 * @return {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.getObjectMetaList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.resources.ObjectMeta>} value
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.setObjectMetaList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.resources.ObjectMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.addObjectMeta = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.resources.ObjectMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.clearObjectMetaList = function() {
  return this.setObjectMetaList([]);
};


/**
 * optional int64 granularity = 3;
 * @return {number}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.getGranularity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.setGranularity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional PlanningType planning_type = 4;
 * @return {!proto.prophetstor.datahub.plannings.PlanningType}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.getPlanningType = function() {
  return /** @type {!proto.prophetstor.datahub.plannings.PlanningType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.plannings.PlanningType} value
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsRequest.prototype.setPlanningType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    clusterPlanningsList: jspb.Message.toObjectList(msg.getClusterPlanningsList(),
    datahub_plannings_plannings_pb.ClusterPlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse;
  return proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new datahub_plannings_plannings_pb.ClusterPlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.ClusterPlanning.deserializeBinaryFromReader);
      msg.addClusterPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getClusterPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_plannings_plannings_pb.ClusterPlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ClusterPlanning cluster_plannings = 2;
 * @return {!Array<!proto.prophetstor.datahub.plannings.ClusterPlanning>}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.getClusterPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.ClusterPlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.ClusterPlanning, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.ClusterPlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.setClusterPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.ClusterPlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.ClusterPlanning}
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.addClusterPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.plannings.ClusterPlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListClusterPlanningsResponse.prototype.clearClusterPlanningsList = function() {
  return this.setClusterPlanningsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.CreatePlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaMeta: (f = msg.getSchemaMeta()) && datahub_schemas_types_pb.SchemaMeta.toObject(includeInstance, f),
    planningsList: jspb.Message.toObjectList(msg.getPlanningsList(),
    datahub_plannings_plannings_pb.WritePlanning.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.CreatePlanningsRequest;
  return proto.prophetstor.datahub.plannings.CreatePlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_schemas_types_pb.SchemaMeta;
      reader.readMessage(value,datahub_schemas_types_pb.SchemaMeta.deserializeBinaryFromReader);
      msg.setSchemaMeta(value);
      break;
    case 2:
      var value = new datahub_plannings_plannings_pb.WritePlanning;
      reader.readMessage(value,datahub_plannings_plannings_pb.WritePlanning.deserializeBinaryFromReader);
      msg.addPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.CreatePlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_schemas_types_pb.SchemaMeta.serializeBinaryToWriter
    );
  }
  f = message.getPlanningsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_plannings_plannings_pb.WritePlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.schemas.SchemaMeta schema_meta = 1;
 * @return {?proto.prophetstor.datahub.schemas.SchemaMeta}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.getSchemaMeta = function() {
  return /** @type{?proto.prophetstor.datahub.schemas.SchemaMeta} */ (
    jspb.Message.getWrapperField(this, datahub_schemas_types_pb.SchemaMeta, 1));
};


/**
 * @param {?proto.prophetstor.datahub.schemas.SchemaMeta|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.setSchemaMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.clearSchemaMeta = function() {
  return this.setSchemaMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.hasSchemaMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WritePlanning plannings = 2;
 * @return {!Array<!proto.prophetstor.datahub.plannings.WritePlanning>}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.getPlanningsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.plannings.WritePlanning>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_plannings_plannings_pb.WritePlanning, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.plannings.WritePlanning>} value
 * @return {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.setPlanningsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.plannings.WritePlanning=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.plannings.WritePlanning}
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.addPlannings = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.plannings.WritePlanning, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.plannings.CreatePlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.CreatePlanningsRequest.prototype.clearPlanningsList = function() {
  return this.setPlanningsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListPlanningsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListPlanningsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f),
    schemaMeta: (f = msg.getSchemaMeta()) && datahub_schemas_types_pb.SchemaMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListPlanningsRequest;
  return proto.prophetstor.datahub.plannings.ListPlanningsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListPlanningsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsRequest}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    case 2:
      var value = new datahub_schemas_types_pb.SchemaMeta;
      reader.readMessage(value,datahub_schemas_types_pb.SchemaMeta.deserializeBinaryFromReader);
      msg.setSchemaMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListPlanningsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListPlanningsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
  f = message.getSchemaMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      datahub_schemas_types_pb.SchemaMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 1;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 1));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional prophetstor.datahub.schemas.SchemaMeta schema_meta = 2;
 * @return {?proto.prophetstor.datahub.schemas.SchemaMeta}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.getSchemaMeta = function() {
  return /** @type{?proto.prophetstor.datahub.schemas.SchemaMeta} */ (
    jspb.Message.getWrapperField(this, datahub_schemas_types_pb.SchemaMeta, 2));
};


/**
 * @param {?proto.prophetstor.datahub.schemas.SchemaMeta|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsRequest} returns this
*/
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.setSchemaMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsRequest} returns this
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.clearSchemaMeta = function() {
  return this.setSchemaMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListPlanningsRequest.prototype.hasSchemaMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.plannings.ListPlanningsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.plannings.ListPlanningsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && google_rpc_status_pb.Status.toObject(includeInstance, f),
    plannings: (f = msg.getPlannings()) && datahub_plannings_types_pb.RawPlanning.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.plannings.ListPlanningsResponse;
  return proto.prophetstor.datahub.plannings.ListPlanningsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.plannings.ListPlanningsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsResponse}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_rpc_status_pb.Status;
      reader.readMessage(value,google_rpc_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new datahub_plannings_types_pb.RawPlanning;
      reader.readMessage(value,datahub_plannings_types_pb.RawPlanning.deserializeBinaryFromReader);
      msg.setPlannings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.plannings.ListPlanningsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.plannings.ListPlanningsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_rpc_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getPlannings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      datahub_plannings_types_pb.RawPlanning.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.rpc.Status status = 1;
 * @return {?proto.google.rpc.Status}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.getStatus = function() {
  return /** @type{?proto.google.rpc.Status} */ (
    jspb.Message.getWrapperField(this, google_rpc_status_pb.Status, 1));
};


/**
 * @param {?proto.google.rpc.Status|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RawPlanning plannings = 2;
 * @return {?proto.prophetstor.datahub.plannings.RawPlanning}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.getPlannings = function() {
  return /** @type{?proto.prophetstor.datahub.plannings.RawPlanning} */ (
    jspb.Message.getWrapperField(this, datahub_plannings_types_pb.RawPlanning, 2));
};


/**
 * @param {?proto.prophetstor.datahub.plannings.RawPlanning|undefined} value
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsResponse} returns this
*/
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.setPlannings = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.plannings.ListPlanningsResponse} returns this
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.clearPlannings = function() {
  return this.setPlannings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.plannings.ListPlanningsResponse.prototype.hasPlannings = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.prophetstor.datahub.plannings);
