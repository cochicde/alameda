// source: datahub/data/data.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var datahub_common_metrics_pb = require('../../datahub/common/metrics_pb.js');
goog.object.extend(proto, datahub_common_metrics_pb);
var datahub_common_queries_pb = require('../../datahub/common/queries_pb.js');
goog.object.extend(proto, datahub_common_queries_pb);
var datahub_common_rawdata_pb = require('../../datahub/common/rawdata_pb.js');
goog.object.extend(proto, datahub_common_rawdata_pb);
var datahub_common_types_pb = require('../../datahub/common/types_pb.js');
goog.object.extend(proto, datahub_common_types_pb);
goog.exportSymbol('proto.prophetstor.datahub.data.DeleteData', null, global);
goog.exportSymbol('proto.prophetstor.datahub.data.ReadData', null, global);
goog.exportSymbol('proto.prophetstor.datahub.data.WriteData', null, global);
goog.exportSymbol('proto.prophetstor.datahub.data.WriteMeta', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.data.WriteData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.data.WriteData.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.data.WriteData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.data.WriteData.displayName = 'proto.prophetstor.datahub.data.WriteData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.data.ReadData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.datahub.data.ReadData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.data.ReadData.displayName = 'proto.prophetstor.datahub.data.ReadData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.data.DeleteData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.datahub.data.DeleteData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.data.DeleteData.displayName = 'proto.prophetstor.datahub.data.DeleteData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.data.WriteMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.data.WriteMeta.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.data.WriteMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.data.WriteMeta.displayName = 'proto.prophetstor.datahub.data.WriteMeta';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.data.WriteData.repeatedFields_ = [5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.data.WriteData.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.data.WriteData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.data.WriteData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.WriteData.toObject = function(includeInstance, msg) {
  var f, obj = {
    measurement: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metricType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resourceBoundary: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resourceQuota: jspb.Message.getFieldWithDefault(msg, 4, 0),
    columnsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    datahub_common_rawdata_pb.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.data.WriteData}
 */
proto.prophetstor.datahub.data.WriteData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.data.WriteData;
  return proto.prophetstor.datahub.data.WriteData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.data.WriteData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.data.WriteData}
 */
proto.prophetstor.datahub.data.WriteData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeasurement(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.datahub.common.MetricType} */ (reader.readEnum());
      msg.setMetricType(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (reader.readEnum());
      msg.setResourceBoundary(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (reader.readEnum());
      msg.setResourceQuota(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumns(value);
      break;
    case 6:
      var value = new datahub_common_rawdata_pb.Row;
      reader.readMessage(value,datahub_common_rawdata_pb.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.data.WriteData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.data.WriteData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.data.WriteData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.WriteData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeasurement();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetricType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getResourceBoundary();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getResourceQuota();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      datahub_common_rawdata_pb.Row.serializeBinaryToWriter
    );
  }
};


/**
 * optional string measurement = 1;
 * @return {string}
 */
proto.prophetstor.datahub.data.WriteData.prototype.getMeasurement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.setMeasurement = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional prophetstor.datahub.common.MetricType metric_type = 2;
 * @return {!proto.prophetstor.datahub.common.MetricType}
 */
proto.prophetstor.datahub.data.WriteData.prototype.getMetricType = function() {
  return /** @type {!proto.prophetstor.datahub.common.MetricType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricType} value
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.setMetricType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional prophetstor.datahub.common.ResourceBoundary resource_boundary = 3;
 * @return {!proto.prophetstor.datahub.common.ResourceBoundary}
 */
proto.prophetstor.datahub.data.WriteData.prototype.getResourceBoundary = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceBoundary} value
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.setResourceBoundary = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional prophetstor.datahub.common.ResourceQuota resource_quota = 4;
 * @return {!proto.prophetstor.datahub.common.ResourceQuota}
 */
proto.prophetstor.datahub.data.WriteData.prototype.getResourceQuota = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceQuota} value
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.setResourceQuota = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated string columns = 5;
 * @return {!Array<string>}
 */
proto.prophetstor.datahub.data.WriteData.prototype.getColumnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.setColumnsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.addColumns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated prophetstor.datahub.common.Row rows = 6;
 * @return {!Array<!proto.prophetstor.datahub.common.Row>}
 */
proto.prophetstor.datahub.data.WriteData.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_rawdata_pb.Row, 6));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.Row>} value
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
*/
proto.prophetstor.datahub.data.WriteData.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.Row}
 */
proto.prophetstor.datahub.data.WriteData.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.prophetstor.datahub.common.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.data.WriteData} returns this
 */
proto.prophetstor.datahub.data.WriteData.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.data.ReadData.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.data.ReadData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.data.ReadData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.ReadData.toObject = function(includeInstance, msg) {
  var f, obj = {
    measurement: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metricType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resourceBoundary: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resourceQuota: jspb.Message.getFieldWithDefault(msg, 4, 0),
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.data.ReadData}
 */
proto.prophetstor.datahub.data.ReadData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.data.ReadData;
  return proto.prophetstor.datahub.data.ReadData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.data.ReadData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.data.ReadData}
 */
proto.prophetstor.datahub.data.ReadData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeasurement(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.datahub.common.MetricType} */ (reader.readEnum());
      msg.setMetricType(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (reader.readEnum());
      msg.setResourceBoundary(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (reader.readEnum());
      msg.setResourceQuota(value);
      break;
    case 5:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.data.ReadData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.data.ReadData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.data.ReadData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.ReadData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeasurement();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetricType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getResourceBoundary();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getResourceQuota();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string measurement = 1;
 * @return {string}
 */
proto.prophetstor.datahub.data.ReadData.prototype.getMeasurement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.datahub.data.ReadData} returns this
 */
proto.prophetstor.datahub.data.ReadData.prototype.setMeasurement = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional prophetstor.datahub.common.MetricType metric_type = 2;
 * @return {!proto.prophetstor.datahub.common.MetricType}
 */
proto.prophetstor.datahub.data.ReadData.prototype.getMetricType = function() {
  return /** @type {!proto.prophetstor.datahub.common.MetricType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricType} value
 * @return {!proto.prophetstor.datahub.data.ReadData} returns this
 */
proto.prophetstor.datahub.data.ReadData.prototype.setMetricType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional prophetstor.datahub.common.ResourceBoundary resource_boundary = 3;
 * @return {!proto.prophetstor.datahub.common.ResourceBoundary}
 */
proto.prophetstor.datahub.data.ReadData.prototype.getResourceBoundary = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceBoundary} value
 * @return {!proto.prophetstor.datahub.data.ReadData} returns this
 */
proto.prophetstor.datahub.data.ReadData.prototype.setResourceBoundary = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional prophetstor.datahub.common.ResourceQuota resource_quota = 4;
 * @return {!proto.prophetstor.datahub.common.ResourceQuota}
 */
proto.prophetstor.datahub.data.ReadData.prototype.getResourceQuota = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceQuota} value
 * @return {!proto.prophetstor.datahub.data.ReadData} returns this
 */
proto.prophetstor.datahub.data.ReadData.prototype.setResourceQuota = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 5;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.data.ReadData.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 5));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.data.ReadData} returns this
*/
proto.prophetstor.datahub.data.ReadData.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.data.ReadData} returns this
 */
proto.prophetstor.datahub.data.ReadData.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.data.ReadData.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.data.DeleteData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.data.DeleteData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.DeleteData.toObject = function(includeInstance, msg) {
  var f, obj = {
    measurement: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metricType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resourceBoundary: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resourceQuota: jspb.Message.getFieldWithDefault(msg, 4, 0),
    queryCondition: (f = msg.getQueryCondition()) && datahub_common_queries_pb.QueryCondition.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.data.DeleteData}
 */
proto.prophetstor.datahub.data.DeleteData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.data.DeleteData;
  return proto.prophetstor.datahub.data.DeleteData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.data.DeleteData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.data.DeleteData}
 */
proto.prophetstor.datahub.data.DeleteData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeasurement(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.datahub.common.MetricType} */ (reader.readEnum());
      msg.setMetricType(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (reader.readEnum());
      msg.setResourceBoundary(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (reader.readEnum());
      msg.setResourceQuota(value);
      break;
    case 5:
      var value = new datahub_common_queries_pb.QueryCondition;
      reader.readMessage(value,datahub_common_queries_pb.QueryCondition.deserializeBinaryFromReader);
      msg.setQueryCondition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.data.DeleteData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.data.DeleteData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.DeleteData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeasurement();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetricType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getResourceBoundary();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getResourceQuota();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getQueryCondition();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      datahub_common_queries_pb.QueryCondition.serializeBinaryToWriter
    );
  }
};


/**
 * optional string measurement = 1;
 * @return {string}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.getMeasurement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.datahub.data.DeleteData} returns this
 */
proto.prophetstor.datahub.data.DeleteData.prototype.setMeasurement = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional prophetstor.datahub.common.MetricType metric_type = 2;
 * @return {!proto.prophetstor.datahub.common.MetricType}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.getMetricType = function() {
  return /** @type {!proto.prophetstor.datahub.common.MetricType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricType} value
 * @return {!proto.prophetstor.datahub.data.DeleteData} returns this
 */
proto.prophetstor.datahub.data.DeleteData.prototype.setMetricType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional prophetstor.datahub.common.ResourceBoundary resource_boundary = 3;
 * @return {!proto.prophetstor.datahub.common.ResourceBoundary}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.getResourceBoundary = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceBoundary} value
 * @return {!proto.prophetstor.datahub.data.DeleteData} returns this
 */
proto.prophetstor.datahub.data.DeleteData.prototype.setResourceBoundary = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional prophetstor.datahub.common.ResourceQuota resource_quota = 4;
 * @return {!proto.prophetstor.datahub.common.ResourceQuota}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.getResourceQuota = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceQuota} value
 * @return {!proto.prophetstor.datahub.data.DeleteData} returns this
 */
proto.prophetstor.datahub.data.DeleteData.prototype.setResourceQuota = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional prophetstor.datahub.common.QueryCondition query_condition = 5;
 * @return {?proto.prophetstor.datahub.common.QueryCondition}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.getQueryCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.QueryCondition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.QueryCondition, 5));
};


/**
 * @param {?proto.prophetstor.datahub.common.QueryCondition|undefined} value
 * @return {!proto.prophetstor.datahub.data.DeleteData} returns this
*/
proto.prophetstor.datahub.data.DeleteData.prototype.setQueryCondition = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.data.DeleteData} returns this
 */
proto.prophetstor.datahub.data.DeleteData.prototype.clearQueryCondition = function() {
  return this.setQueryCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.data.DeleteData.prototype.hasQueryCondition = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.data.WriteMeta.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.data.WriteMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.data.WriteMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.WriteMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    measurement: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metricType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resourceBoundary: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resourceQuota: jspb.Message.getFieldWithDefault(msg, 4, 0),
    condition: (f = msg.getCondition()) && datahub_common_queries_pb.Condition.toObject(includeInstance, f),
    columnsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    datahub_common_rawdata_pb.Row.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.data.WriteMeta}
 */
proto.prophetstor.datahub.data.WriteMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.data.WriteMeta;
  return proto.prophetstor.datahub.data.WriteMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.data.WriteMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.data.WriteMeta}
 */
proto.prophetstor.datahub.data.WriteMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeasurement(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.datahub.common.MetricType} */ (reader.readEnum());
      msg.setMetricType(value);
      break;
    case 3:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (reader.readEnum());
      msg.setResourceBoundary(value);
      break;
    case 4:
      var value = /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (reader.readEnum());
      msg.setResourceQuota(value);
      break;
    case 5:
      var value = new datahub_common_queries_pb.Condition;
      reader.readMessage(value,datahub_common_queries_pb.Condition.deserializeBinaryFromReader);
      msg.setCondition(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addColumns(value);
      break;
    case 7:
      var value = new datahub_common_rawdata_pb.Row;
      reader.readMessage(value,datahub_common_rawdata_pb.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.data.WriteMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.data.WriteMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.data.WriteMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeasurement();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetricType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getResourceBoundary();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getResourceQuota();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCondition();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      datahub_common_queries_pb.Condition.serializeBinaryToWriter
    );
  }
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      datahub_common_rawdata_pb.Row.serializeBinaryToWriter
    );
  }
};


/**
 * optional string measurement = 1;
 * @return {string}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.getMeasurement = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.setMeasurement = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional prophetstor.datahub.common.MetricType metric_type = 2;
 * @return {!proto.prophetstor.datahub.common.MetricType}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.getMetricType = function() {
  return /** @type {!proto.prophetstor.datahub.common.MetricType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricType} value
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.setMetricType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional prophetstor.datahub.common.ResourceBoundary resource_boundary = 3;
 * @return {!proto.prophetstor.datahub.common.ResourceBoundary}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.getResourceBoundary = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceBoundary} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceBoundary} value
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.setResourceBoundary = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional prophetstor.datahub.common.ResourceQuota resource_quota = 4;
 * @return {!proto.prophetstor.datahub.common.ResourceQuota}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.getResourceQuota = function() {
  return /** @type {!proto.prophetstor.datahub.common.ResourceQuota} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.ResourceQuota} value
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.setResourceQuota = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional prophetstor.datahub.common.Condition condition = 5;
 * @return {?proto.prophetstor.datahub.common.Condition}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.getCondition = function() {
  return /** @type{?proto.prophetstor.datahub.common.Condition} */ (
    jspb.Message.getWrapperField(this, datahub_common_queries_pb.Condition, 5));
};


/**
 * @param {?proto.prophetstor.datahub.common.Condition|undefined} value
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
*/
proto.prophetstor.datahub.data.WriteMeta.prototype.setCondition = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.clearCondition = function() {
  return this.setCondition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.hasCondition = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string columns = 6;
 * @return {!Array<string>}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.getColumnsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.setColumnsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.addColumns = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated prophetstor.datahub.common.Row rows = 7;
 * @return {!Array<!proto.prophetstor.datahub.common.Row>}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_rawdata_pb.Row, 7));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.Row>} value
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
*/
proto.prophetstor.datahub.data.WriteMeta.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.Row}
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.prophetstor.datahub.common.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.data.WriteMeta} returns this
 */
proto.prophetstor.datahub.data.WriteMeta.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


goog.object.extend(exports, proto.prophetstor.datahub.data);
