// source: datahub/metrics/metrics.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var datahub_common_metrics_pb = require('../../datahub/common/metrics_pb.js');
goog.object.extend(proto, datahub_common_metrics_pb);
var datahub_common_rawdata_pb = require('../../datahub/common/rawdata_pb.js');
goog.object.extend(proto, datahub_common_rawdata_pb);
var datahub_resources_metadata_pb = require('../../datahub/resources/metadata_pb.js');
goog.object.extend(proto, datahub_resources_metadata_pb);
goog.exportSymbol('proto.prophetstor.datahub.metrics.ApplicationMetric', null, global);
goog.exportSymbol('proto.prophetstor.datahub.metrics.ClusterMetric', null, global);
goog.exportSymbol('proto.prophetstor.datahub.metrics.ContainerMetric', null, global);
goog.exportSymbol('proto.prophetstor.datahub.metrics.ControllerMetric', null, global);
goog.exportSymbol('proto.prophetstor.datahub.metrics.NamespaceMetric', null, global);
goog.exportSymbol('proto.prophetstor.datahub.metrics.NodeMetric', null, global);
goog.exportSymbol('proto.prophetstor.datahub.metrics.PodMetric', null, global);
goog.exportSymbol('proto.prophetstor.datahub.metrics.WriteMetric', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.ContainerMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.metrics.ContainerMetric.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.ContainerMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.ContainerMetric.displayName = 'proto.prophetstor.datahub.metrics.ContainerMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.PodMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.metrics.PodMetric.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.PodMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.PodMetric.displayName = 'proto.prophetstor.datahub.metrics.PodMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.ControllerMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.metrics.ControllerMetric.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.ControllerMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.ControllerMetric.displayName = 'proto.prophetstor.datahub.metrics.ControllerMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.ApplicationMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.metrics.ApplicationMetric.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.ApplicationMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.ApplicationMetric.displayName = 'proto.prophetstor.datahub.metrics.ApplicationMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.NamespaceMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.metrics.NamespaceMetric.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.NamespaceMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.NamespaceMetric.displayName = 'proto.prophetstor.datahub.metrics.NamespaceMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.NodeMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.metrics.NodeMetric.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.NodeMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.NodeMetric.displayName = 'proto.prophetstor.datahub.metrics.NodeMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.ClusterMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.prophetstor.datahub.metrics.ClusterMetric.repeatedFields_, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.ClusterMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.ClusterMetric.displayName = 'proto.prophetstor.datahub.metrics.ClusterMetric';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.prophetstor.datahub.metrics.WriteMetric = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.prophetstor.datahub.metrics.WriteMetric, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.prophetstor.datahub.metrics.WriteMetric.displayName = 'proto.prophetstor.datahub.metrics.WriteMetric';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.metrics.ContainerMetric.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.ContainerMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.ContainerMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ContainerMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metricDataList: jspb.Message.toObjectList(msg.getMetricDataList(),
    datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.ContainerMetric}
 */
proto.prophetstor.datahub.metrics.ContainerMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.ContainerMetric;
  return proto.prophetstor.datahub.metrics.ContainerMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.ContainerMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.ContainerMetric}
 */
proto.prophetstor.datahub.metrics.ContainerMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addMetricData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.ContainerMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.ContainerMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ContainerMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetricDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.prophetstor.datahub.metrics.ContainerMetric} returns this
 */
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated prophetstor.datahub.common.MetricData metric_data = 2;
 * @return {!Array<!proto.prophetstor.datahub.common.MetricData>}
 */
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.getMetricDataList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_metrics_pb.MetricData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.datahub.metrics.ContainerMetric} returns this
*/
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.setMetricDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.MetricData}
 */
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.addMetricData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.metrics.ContainerMetric} returns this
 */
proto.prophetstor.datahub.metrics.ContainerMetric.prototype.clearMetricDataList = function() {
  return this.setMetricDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.metrics.PodMetric.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.PodMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.PodMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.PodMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    containerMetricsList: jspb.Message.toObjectList(msg.getContainerMetricsList(),
    proto.prophetstor.datahub.metrics.ContainerMetric.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.PodMetric}
 */
proto.prophetstor.datahub.metrics.PodMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.PodMetric;
  return proto.prophetstor.datahub.metrics.PodMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.PodMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.PodMetric}
 */
proto.prophetstor.datahub.metrics.PodMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new proto.prophetstor.datahub.metrics.ContainerMetric;
      reader.readMessage(value,proto.prophetstor.datahub.metrics.ContainerMetric.deserializeBinaryFromReader);
      msg.addContainerMetrics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.PodMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.PodMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.PodMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getContainerMetricsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.prophetstor.datahub.metrics.ContainerMetric.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.datahub.metrics.PodMetric} returns this
*/
proto.prophetstor.datahub.metrics.PodMetric.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.metrics.PodMetric} returns this
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ContainerMetric container_metrics = 2;
 * @return {!Array<!proto.prophetstor.datahub.metrics.ContainerMetric>}
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.getContainerMetricsList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.metrics.ContainerMetric>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.prophetstor.datahub.metrics.ContainerMetric, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.metrics.ContainerMetric>} value
 * @return {!proto.prophetstor.datahub.metrics.PodMetric} returns this
*/
proto.prophetstor.datahub.metrics.PodMetric.prototype.setContainerMetricsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.metrics.ContainerMetric=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.metrics.ContainerMetric}
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.addContainerMetrics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.metrics.ContainerMetric, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.metrics.PodMetric} returns this
 */
proto.prophetstor.datahub.metrics.PodMetric.prototype.clearContainerMetricsList = function() {
  return this.setContainerMetricsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.metrics.ControllerMetric.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.ControllerMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.ControllerMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ControllerMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    kind: jspb.Message.getFieldWithDefault(msg, 2, 0),
    metricDataList: jspb.Message.toObjectList(msg.getMetricDataList(),
    datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.ControllerMetric}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.ControllerMetric;
  return proto.prophetstor.datahub.metrics.ControllerMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.ControllerMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.ControllerMetric}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = /** @type {!proto.prophetstor.datahub.resources.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 3:
      var value = new datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addMetricData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.ControllerMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.ControllerMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ControllerMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMetricDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.datahub.metrics.ControllerMetric} returns this
*/
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.metrics.ControllerMetric} returns this
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional prophetstor.datahub.resources.Kind kind = 2;
 * @return {!proto.prophetstor.datahub.resources.Kind}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.getKind = function() {
  return /** @type {!proto.prophetstor.datahub.resources.Kind} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.prophetstor.datahub.resources.Kind} value
 * @return {!proto.prophetstor.datahub.metrics.ControllerMetric} returns this
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * repeated prophetstor.datahub.common.MetricData metric_data = 3;
 * @return {!Array<!proto.prophetstor.datahub.common.MetricData>}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.getMetricDataList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_metrics_pb.MetricData, 3));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.datahub.metrics.ControllerMetric} returns this
*/
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.setMetricDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.MetricData}
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.addMetricData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.prophetstor.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.metrics.ControllerMetric} returns this
 */
proto.prophetstor.datahub.metrics.ControllerMetric.prototype.clearMetricDataList = function() {
  return this.setMetricDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.ApplicationMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.ApplicationMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    metricDataList: jspb.Message.toObjectList(msg.getMetricDataList(),
    datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.ApplicationMetric}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.ApplicationMetric;
  return proto.prophetstor.datahub.metrics.ApplicationMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.ApplicationMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.ApplicationMetric}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addMetricData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.ApplicationMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.ApplicationMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getMetricDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.datahub.metrics.ApplicationMetric} returns this
*/
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.metrics.ApplicationMetric} returns this
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.common.MetricData metric_data = 2;
 * @return {!Array<!proto.prophetstor.datahub.common.MetricData>}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.getMetricDataList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_metrics_pb.MetricData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.datahub.metrics.ApplicationMetric} returns this
*/
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.setMetricDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.MetricData}
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.addMetricData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.metrics.ApplicationMetric} returns this
 */
proto.prophetstor.datahub.metrics.ApplicationMetric.prototype.clearMetricDataList = function() {
  return this.setMetricDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.NamespaceMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.NamespaceMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    metricDataList: jspb.Message.toObjectList(msg.getMetricDataList(),
    datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.NamespaceMetric}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.NamespaceMetric;
  return proto.prophetstor.datahub.metrics.NamespaceMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.NamespaceMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.NamespaceMetric}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addMetricData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.NamespaceMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.NamespaceMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getMetricDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.datahub.metrics.NamespaceMetric} returns this
*/
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.metrics.NamespaceMetric} returns this
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.common.MetricData metric_data = 2;
 * @return {!Array<!proto.prophetstor.datahub.common.MetricData>}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.getMetricDataList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_metrics_pb.MetricData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.datahub.metrics.NamespaceMetric} returns this
*/
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.setMetricDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.MetricData}
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.addMetricData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.metrics.NamespaceMetric} returns this
 */
proto.prophetstor.datahub.metrics.NamespaceMetric.prototype.clearMetricDataList = function() {
  return this.setMetricDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.metrics.NodeMetric.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.NodeMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.NodeMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.NodeMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    metricDataList: jspb.Message.toObjectList(msg.getMetricDataList(),
    datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.NodeMetric}
 */
proto.prophetstor.datahub.metrics.NodeMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.NodeMetric;
  return proto.prophetstor.datahub.metrics.NodeMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.NodeMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.NodeMetric}
 */
proto.prophetstor.datahub.metrics.NodeMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addMetricData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.NodeMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.NodeMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.NodeMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getMetricDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.datahub.metrics.NodeMetric} returns this
*/
proto.prophetstor.datahub.metrics.NodeMetric.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.metrics.NodeMetric} returns this
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.common.MetricData metric_data = 2;
 * @return {!Array<!proto.prophetstor.datahub.common.MetricData>}
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.getMetricDataList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_metrics_pb.MetricData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.datahub.metrics.NodeMetric} returns this
*/
proto.prophetstor.datahub.metrics.NodeMetric.prototype.setMetricDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.MetricData}
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.addMetricData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.metrics.NodeMetric} returns this
 */
proto.prophetstor.datahub.metrics.NodeMetric.prototype.clearMetricDataList = function() {
  return this.setMetricDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.prophetstor.datahub.metrics.ClusterMetric.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.ClusterMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.ClusterMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ClusterMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    objectMeta: (f = msg.getObjectMeta()) && datahub_resources_metadata_pb.ObjectMeta.toObject(includeInstance, f),
    metricDataList: jspb.Message.toObjectList(msg.getMetricDataList(),
    datahub_common_metrics_pb.MetricData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.ClusterMetric}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.ClusterMetric;
  return proto.prophetstor.datahub.metrics.ClusterMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.ClusterMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.ClusterMetric}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new datahub_resources_metadata_pb.ObjectMeta;
      reader.readMessage(value,datahub_resources_metadata_pb.ObjectMeta.deserializeBinaryFromReader);
      msg.setObjectMeta(value);
      break;
    case 2:
      var value = new datahub_common_metrics_pb.MetricData;
      reader.readMessage(value,datahub_common_metrics_pb.MetricData.deserializeBinaryFromReader);
      msg.addMetricData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.ClusterMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.ClusterMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.ClusterMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjectMeta();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      datahub_resources_metadata_pb.ObjectMeta.serializeBinaryToWriter
    );
  }
  f = message.getMetricDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      datahub_common_metrics_pb.MetricData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.resources.ObjectMeta object_meta = 1;
 * @return {?proto.prophetstor.datahub.resources.ObjectMeta}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.getObjectMeta = function() {
  return /** @type{?proto.prophetstor.datahub.resources.ObjectMeta} */ (
    jspb.Message.getWrapperField(this, datahub_resources_metadata_pb.ObjectMeta, 1));
};


/**
 * @param {?proto.prophetstor.datahub.resources.ObjectMeta|undefined} value
 * @return {!proto.prophetstor.datahub.metrics.ClusterMetric} returns this
*/
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.setObjectMeta = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.metrics.ClusterMetric} returns this
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.clearObjectMeta = function() {
  return this.setObjectMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.hasObjectMeta = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated prophetstor.datahub.common.MetricData metric_data = 2;
 * @return {!Array<!proto.prophetstor.datahub.common.MetricData>}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.getMetricDataList = function() {
  return /** @type{!Array<!proto.prophetstor.datahub.common.MetricData>} */ (
    jspb.Message.getRepeatedWrapperField(this, datahub_common_metrics_pb.MetricData, 2));
};


/**
 * @param {!Array<!proto.prophetstor.datahub.common.MetricData>} value
 * @return {!proto.prophetstor.datahub.metrics.ClusterMetric} returns this
*/
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.setMetricDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.prophetstor.datahub.common.MetricData}
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.addMetricData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.prophetstor.datahub.common.MetricData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.prophetstor.datahub.metrics.ClusterMetric} returns this
 */
proto.prophetstor.datahub.metrics.ClusterMetric.prototype.clearMetricDataList = function() {
  return this.setMetricDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.prophetstor.datahub.metrics.WriteMetric.prototype.toObject = function(opt_includeInstance) {
  return proto.prophetstor.datahub.metrics.WriteMetric.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.prophetstor.datahub.metrics.WriteMetric} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.WriteMetric.toObject = function(includeInstance, msg) {
  var f, obj = {
    metricType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    writeData: (f = msg.getWriteData()) && datahub_common_rawdata_pb.WriteData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.prophetstor.datahub.metrics.WriteMetric}
 */
proto.prophetstor.datahub.metrics.WriteMetric.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.prophetstor.datahub.metrics.WriteMetric;
  return proto.prophetstor.datahub.metrics.WriteMetric.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.prophetstor.datahub.metrics.WriteMetric} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.prophetstor.datahub.metrics.WriteMetric}
 */
proto.prophetstor.datahub.metrics.WriteMetric.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.prophetstor.datahub.common.MetricType} */ (reader.readEnum());
      msg.setMetricType(value);
      break;
    case 2:
      var value = new datahub_common_rawdata_pb.WriteData;
      reader.readMessage(value,datahub_common_rawdata_pb.WriteData.deserializeBinaryFromReader);
      msg.setWriteData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.prophetstor.datahub.metrics.WriteMetric.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.prophetstor.datahub.metrics.WriteMetric.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.prophetstor.datahub.metrics.WriteMetric} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.prophetstor.datahub.metrics.WriteMetric.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetricType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getWriteData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      datahub_common_rawdata_pb.WriteData.serializeBinaryToWriter
    );
  }
};


/**
 * optional prophetstor.datahub.common.MetricType metric_type = 1;
 * @return {!proto.prophetstor.datahub.common.MetricType}
 */
proto.prophetstor.datahub.metrics.WriteMetric.prototype.getMetricType = function() {
  return /** @type {!proto.prophetstor.datahub.common.MetricType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.prophetstor.datahub.common.MetricType} value
 * @return {!proto.prophetstor.datahub.metrics.WriteMetric} returns this
 */
proto.prophetstor.datahub.metrics.WriteMetric.prototype.setMetricType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional prophetstor.datahub.common.WriteData write_data = 2;
 * @return {?proto.prophetstor.datahub.common.WriteData}
 */
proto.prophetstor.datahub.metrics.WriteMetric.prototype.getWriteData = function() {
  return /** @type{?proto.prophetstor.datahub.common.WriteData} */ (
    jspb.Message.getWrapperField(this, datahub_common_rawdata_pb.WriteData, 2));
};


/**
 * @param {?proto.prophetstor.datahub.common.WriteData|undefined} value
 * @return {!proto.prophetstor.datahub.metrics.WriteMetric} returns this
*/
proto.prophetstor.datahub.metrics.WriteMetric.prototype.setWriteData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.prophetstor.datahub.metrics.WriteMetric} returns this
 */
proto.prophetstor.datahub.metrics.WriteMetric.prototype.clearWriteData = function() {
  return this.setWriteData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.prophetstor.datahub.metrics.WriteMetric.prototype.hasWriteData = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.prophetstor.datahub.metrics);
