# This Dockerfile is used for building alameda-datahub on https://connect.redhat.com
FROM openshift/origin-release:golang-1.15 as builder
#RUN yum update -y

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

WORKDIR /go/src/prophetstor.com/alameda

COPY . .
RUN set -x \
    && export GIT_COMMIT=`git rev-parse --short HEAD || echo 'none'` \
    && export _TMP_STR=`git show-ref --abbrev --head | grep "^${GIT_COMMIT} " | grep -v "HEAD$" | head -1 | awk '{print $NF}'` \
    && [ "${_TMP_STR}" = "" ] && export GIT_REF="HEAD" || export GIT_REF="${_TMP_STR}" \
    && [ "`git diff --shortstat`" = "" ] && export GIT_DIRTY="" || export GIT_DIRTY="-dirty" \
    && export CODE_VERSION="${GIT_REF}@${GIT_COMMIT}${GIT_DIRTY}" \
    && echo "CODE_VERSION=${CODE_VERSION}" > version.txt

# Build datahub executable binary
RUN ["/bin/bash", "-c", "go build -ldflags \"-X main.VERSION=`git rev-parse --abbrev-ref HEAD`-`git rev-parse --short HEAD``git diff --quiet || echo '-dirty'` -X 'main.BUILD_TIME=`date`' -X 'main.GO_VERSION=`go version`'\" -a -o ./datahub/datahub prophetstor.com/alameda/datahub/cmd"]

# Build license-utils executable binary
RUN ["/bin/bash", "-c", "go build -ldflags \"-X main.VERSION=`git rev-parse --abbrev-ref HEAD`-`git rev-parse --short HEAD``git diff --quiet || echo '-dirty'` -X 'main.BUILD_TIME=`date`' -X 'main.GO_VERSION=`go version`'\" -a -o ./datahub/license-utils prophetstor.com/alameda/datahub/tools/license-utils/cmd"]

# Install and create package file
RUN set -x \
    && mkdir -pv -m ug+w /install_root/etc/alameda/datahub/ /install_root/licenses/ \
           /install_root/opt/prophetstor/federatorai/{bin,lib,etc,var/tmp} \
           /install_root/usr/local/bin/ \
    # Copy datahub
    && cp -fv /go/src/prophetstor.com/alameda/LICENSE /install_root/licenses/ \
    && cp -fv /go/src/prophetstor.com/alameda/datahub/etc/datahub.toml /install_root/etc/alameda/datahub/datahub.toml \
    && cp -fv /go/src/prophetstor.com/alameda/datahub/datahub /install_root/usr/local/bin/ \
    # Copy license-utils
    && cp -fv /go/src/prophetstor.com/alameda/datahub/license-utils /install_root/usr/local/bin/ \
    # Copy keycode management tool
    && cp -fv /go/src/prophetstor.com/alameda/datahub/pkg/account-mgt/keycodes/bin/license_main /install_root/opt/prophetstor/federatorai/bin/ \
    && cp -fv /go/src/prophetstor.com/alameda/datahub/pkg/account-mgt/keycodes/lib/license_helper.so /install_root/opt/prophetstor/federatorai/lib/ \
    && cp -fv /go/src/prophetstor.com/alameda/datahub/pkg/account-mgt/keycodes/lib/license_util.so /install_root/opt/prophetstor/federatorai/lib/ \
    && cp -fv /go/src/prophetstor.com/alameda/datahub/pkg/account-mgt/keycodes/lib/util_crypto.so /install_root/opt/prophetstor/federatorai/lib/ \
    && cp -fv /go/src/prophetstor.com/alameda/datahub/pkg/account-mgt/keycodes/lib/util_ldap.so /install_root/opt/prophetstor/federatorai/lib/ \
    && cp -fv /go/src/prophetstor.com/alameda/datahub/pkg/account-mgt/keycodes/lib/_utilModule.so /install_root/opt/prophetstor/federatorai/lib/ \
    && chown -R 1001:0 /install_root/opt/prophetstor/federatorai \
    && cd /install_root; tar cvf /install_root.tar .

# Copy the alameda-datahub into a thin image
FROM registry.access.redhat.com/ubi8/ubi-minimal
ENV SUMMARY="Alameda Datahub is an API gateway for handling gRPC requests."	\
    DESCRIPTION="Alameda Datahub is an API gateway for handling gRPC requests." \
    NAME="Alameda Datahub" \
    VERSION="latest" \
    USER_UID=1001 \
    USER_NAME=alameda \
    AIHOME="/opt/alameda/alameda-datahub" \
    FEDAIHOME="/opt/prophetstor/federatorai" \
    LD_LIBRARY_PATH="/opt/prophetstor/federatorai/lib"

LABEL summary="$SUMMARY" \
      description="$DESCRIPTION" \
      io.k8s.description="$DESCRIPTION" \
      io.k8s.display-name="$NAME" \
      com.redhat.component="customer-container" \
      name="$NAME" \
      version="$VERSION" \
      vendor="ProphetStor Data Services, Inc."

COPY --from=builder /go/src/prophetstor.com/alameda/datahub/xray.sh /xray.sh
COPY --from=builder /go/src/prophetstor.com/alameda/version.txt ${AIHOME}/etc/
COPY --from=builder /go/src/prophetstor.com/alameda/datahub/tini /sbin/tini
COPY --from=builder /go/src/prophetstor.com/alameda/datahub/init.sh /init.sh
COPY --from=builder /install_root /

RUN set -x \
    && microdnf update -y \
    && microdnf install -y \
         tar procps-ng psmisc findutils vim-minimal logrotate \
    && microdnf clean all \
    && echo "${USER_NAME}:x:${USER_UID}:0:Federator.ai:${AIHOME}:/bin/sh" >> /etc/passwd \
    # The following lines for logrotate - startup script will add running user id into /etc/passwd
    && chmod g+w /etc/passwd \
    ## install app
    && mkdir -pv /var/log/alameda \
    && chown -R 1001:0 /etc/alameda /var/log/alameda \
    && chmod -R ug+w /etc/alameda /var/log/alameda

EXPOSE 50050/tcp
USER 1001
ENTRYPOINT ["/sbin/tini","-v", "--"]
CMD ["/init.sh", "start"]
